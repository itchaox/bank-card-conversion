"use strict";
/*
 * @Version    : v1.00
 * @Author     : Wang Chao
 * @Date       : 2024-08-19 21:34
 * @LastAuthor : Wang Chao
 * @LastTime   : 2024-08-19 22:44
 * @desc       :
 */
Object.defineProperty(exports, "__esModule", { value: true });
const Conversion = {
    // 二进制转十进制
    BinaryToDecimal: (binary) => {
        return parseInt(binary, 2).toString(10);
    },
    // 二进制转十六进制
    BinaryToHexadecimal: (binary) => {
        return parseInt(binary, 2).toString(16).toLowerCase();
    },
    // 十进制转二进制
    DecimalToBinary: (decimal) => {
        return parseInt(decimal, 10).toString(2);
    },
    // 十进制转十六进制
    DecimalToHexadecimal: (decimal) => {
        return parseInt(decimal, 10).toString(16).toLowerCase();
    },
    // 十六进制转二进制
    HexadecimalToBinary: (hexadecimal) => {
        return parseInt(hexadecimal, 16).toString(2);
    },
    // 十六进制转十进制
    HexadecimalToDecimal: (hexadecimal) => {
        return parseInt(hexadecimal, 16).toString(10);
    },
    // 将 RGB 颜色转换为 HEX 颜色格式
    RGBToHEX: (rgbString) => {
        // 从字符串中解析出 R、G、B 值
        const [r, g, b] = rgbString.split(',').map(Number);
        // 将 R、G、B 值转换为 HEX 格式
        const toHex = (x) => x.toString(16).padStart(2, '0').toUpperCase();
        return `#${toHex(r)}${toHex(g)}${toHex(b)}`;
    },
    // 将 HEX 颜色格式转换为 RGB 颜色格式
    HEXToRGB: (hex) => {
        // 移除开头的 #
        hex = hex.replace(/^#/, '');
        // 将 HEX 颜色值转换为 RGB 分量
        const r = parseInt(hex.slice(0, 2), 16);
        const g = parseInt(hex.slice(2, 4), 16);
        const b = parseInt(hex.slice(4, 6), 16);
        // 返回 RGB 字符串
        return `${r},${g},${b}`;
    },
    KGToLB: (kilograms) => {
        const poundsPerKilogram = 2.20462; // 1 kg ≈ 2.20462 lb
        return kilograms * poundsPerKilogram;
    },
    LBToKG: (pounds) => {
        const kilogramsPerPound = 0.453592; // 1 lb ≈ 0.453592 kg
        return pounds * kilogramsPerPound;
    },
};
exports.default = Conversion;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm5NYXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvdXRpbHMvZm5NYXAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7O0dBT0c7O0FBRUgsTUFBTSxVQUFVLEdBQUc7SUFDakIsVUFBVTtJQUNWLGVBQWUsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFO1FBQzFCLE9BQU8sUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELFdBQVc7SUFDWCxtQkFBbUIsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFO1FBQzlCLE9BQU8sUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDeEQsQ0FBQztJQUVELFVBQVU7SUFDVixlQUFlLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUMzQixPQUFPLFFBQVEsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxXQUFXO0lBQ1gsb0JBQW9CLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUNoQyxPQUFPLFFBQVEsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzFELENBQUM7SUFFRCxXQUFXO0lBQ1gsbUJBQW1CLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUNuQyxPQUFPLFFBQVEsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRCxXQUFXO0lBQ1gsb0JBQW9CLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUNwQyxPQUFPLFFBQVEsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCx1QkFBdUI7SUFDdkIsUUFBUSxFQUFFLENBQUMsU0FBUyxFQUFFLEVBQUU7UUFDdEIsbUJBQW1CO1FBQ25CLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRW5ELHNCQUFzQjtRQUN0QixNQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ25FLE9BQU8sSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzlDLENBQUM7SUFFRCx5QkFBeUI7SUFDekIsUUFBUSxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUU7UUFDaEIsVUFBVTtRQUNWLEdBQUcsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztRQUU1QixzQkFBc0I7UUFDdEIsTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3hDLE1BQU0sQ0FBQyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN4QyxNQUFNLENBQUMsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFeEMsYUFBYTtRQUNiLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCxNQUFNLEVBQUUsQ0FBQyxTQUFTLEVBQUUsRUFBRTtRQUNwQixNQUFNLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxDQUFDLG9CQUFvQjtRQUN2RCxPQUFPLFNBQVMsR0FBRyxpQkFBaUIsQ0FBQztJQUN2QyxDQUFDO0lBRUQsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUU7UUFDakIsTUFBTSxpQkFBaUIsR0FBRyxRQUFRLENBQUMsQ0FBQyxxQkFBcUI7UUFDekQsT0FBTyxNQUFNLEdBQUcsaUJBQWlCLENBQUM7SUFDcEMsQ0FBQztDQUNGLENBQUM7QUFFRixrQkFBZSxVQUFVLENBQUMifQ==